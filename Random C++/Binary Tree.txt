#include <iostream>

using namespace std;

struct node
{
    struct node *left;
    int data;
    struct node *right;
    struct node *root;
};

struct node *inserte(struct node *root, int val)
{
    struct node *nd =new node;
    nd->data=val;
    
    if(root==NULL)
    {
        nd->left=NULL;
        nd->right=NULL;
        root=nd;
    }
    else if(val<root->data)
    {
        root->left=inserte(root->left, val);
    }
    else if(val>root->data)
    {
        root->right=inserte(root->right, val);
    }
    else if(val==root->data)
    {
        cout<<"Duplicate nodes are not allowed."<<endl;
    }
    return root;
};

struct node *search_binary(struct node *root, int val)
{
    if(root==NULL)
    {
        cout<<"The Tree is empty or the element does not exist."<<endl;
    }
    else if(val<root->data)
    {
        search_binary(root->left, val);
    }
    else if(val>root->data)
    {
        search_binary(root->right, val);
    }
    else if(val==root->data)
    {
        cout<<"Element Found."<<endl;
    }
    return root;
};

void preorder(struct node *root)
{
    if (root!=NULL)
    {
        cout<<" "<<root->data;
        preorder(root->left);
        preorder(root->right);
    }
}

void postorder(struct node *root)
{
    if (root!=NULL)
    {
        postorder(root->left);
        postorder(root->right);
        cout<<" "<<root->data;
    }
}

void inorder(struct node *root)
{
    if (root!=NULL)
    {
        inorder(root->left);
        cout<<" "<<root->data;
        inorder(root->right);
    }
}

int main()
{
    struct node *root=NULL;
    int the_selected_selection;
    
    cout<<" \t \t \n This program showcases the following functions based on the concept of Trees.";
    cout<<" \t \n (Note: By default, the tree is empty at the beginning of the program.";
    do
    {
        cout<<endl<<"1. Insert a node in a Tree."<<endl;
        cout<<"2. Search a node in the Tree."<<endl;
        cout<<"3. Display the Tree in 'Inorder'."<<endl;
        cout<<"4. Display the Tree in 'Preorder'."<<endl;
        cout<<"5. Display the Tree in 'Postorder'."<<endl;
        cout<<"6. Exit."<<endl;
        cout<<endl<<"Please select any one of the available functions: ";
        cin>>the_selected_selection;
        
        switch (the_selected_selection)
        {
            case 1:
            {
                int val;
                
                cout<<"\nPlease enter the value of the node that is to be inserted in the Tree: ";
                cin>>val;
                root=inserte(root,val);
                break;
            }
            case 2:
            {
                int val_search;
                
                cout<<"\nPlease enter the node that is to be searched in the current Tree: ";
                cin>>val_search;
                root=search_binary(root,val_search);
                break;
            }
            case 3:
            {
                cout<<endl<<"The current Binary Tree in Inorder is [";
                inorder(root);
                cout<<" ]"<<endl;
                break;
            }
            case 4:
            {
                cout<<endl<<"The current Binary Tree in Preorder is [";
                preorder(root);
                cout<<" ]"<<endl;
                break;
            }
            case 5:
            {
                cout<<endl<<"The current Binary Tree in Postorder is [";
                postorder(root);
                cout<<" ]"<<endl;
                break;
            }
            case 6:
            {
                cout<<endl<<"Thank you using this program!"<<endl<<"Program terminated...";
                return 0;
            }
            default:
            {
                cout<<"ERROR!"<<endl<<"Please enter a valid selection"<<endl<<" "<<endl;
                break;
            }
        }
    }
    while(the_selected_selection!=6);
}