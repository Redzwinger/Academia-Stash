#include <iostream>
using namespace std;

    int quu[50];
    int visited[50];
    int f = -1, r = -1;

    int underflow()
    {
        if (f == -1 || f > r)
        {
            return (1);
        }
        else
        {
            return (0);
        }
    }
    void enqueue(int value)
    {
        if (r == 5)
        {
            cout << "Queue is full!" << endl;
        }
        else if (f == -1 && r == -1)
        {
            f = r = 0;
            quu[r] = value;
        }
        else
        {
            r++;
            quu[r] = value;
        }
    }

    void dequeue()
    {
        if (underflow())
        {
            cout << "Queue is empty!" << endl;
        }
        else
        {
            f++;
        }
    }

    int main()
    {
        int Graph[4][4];
        int i, j, source;

        cout << "\n \t \tThis program gives the Breadth First Search sequence of a given graph.";
        cout << "\n \nPlease enter the Adjacency Matrix of the chosen Graph- \n \n";

        for (i = 0; i < 4; i++)
        {
            cout << "Row " << i + 1 << ": ";

            for (j = 0; j < 4; j++)
            {
                cin >> Graph[i][j];
            }
        }

        for (int i = 0; i < 4; i++)
        {
            visited[i] = 0;
        }

        cout << "\nPlease enter the source vertex: ";
        cin >> source;

        cout << "\nThe Breadth First Search sequence of the given Graph is: [ ";

        visited[source] = 1;
        enqueue(source);

        while (!underflow())
        {
            int temp = quu[f];

            cout << temp << " ";

            dequeue();

            for (j = 0; j < 4; j++)
            {
                if (Graph[temp][j] == 1 && visited[j] == 0)
                {
                    visited[j] = 1;
                    enqueue(j);
                }
            }
        }
        cout << "]\n \nThank you for using this Program! \n \nProgram Terminated... \n";
    }
